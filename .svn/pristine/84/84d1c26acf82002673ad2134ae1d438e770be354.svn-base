// pages/upload/three.js
var wxRequest = require('../../utils/wxRequest.js');
Page({

  /**
   * 页面的初始数据
   */
  data: {

  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {

    var upmod = wx.getStorageSync("upmod");
    wx.removeStorageSync("upmod")
    this.setData({
      upmod: upmod
    });
    if (upmod.reorderinquiryquestion.length < 1) {
      this.getvisits(this);
    }

  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  },

  nexts: function() {

    for (var i = 0; i < this.data.upmod.reorderinquiryquestion.length; i++) {
      if (this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions != null && this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions.length > 0) {
        var isnull = true;
        for (var j = 0; j < this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions.length; j++) {
          if (this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions[j].ischecked == '1') {
            isnull = false;
            break;
          }
        }
        if (isnull) {
          wx.showToast({
            title: "请完善问诊单",
            icon: 'none'
          })
          return;
        }
      }

    }
    wx.setStorageSync("upmod", this.data.upmod);
    wx.navigateTo({
      url: './four',
    })
  },

  getvisits: function(_this) {
    wxRequest.requests('Inquiry/getConsultationForm', null, function(res) {
      for (var i = 0; i < res.parameters.length; i++) {
        if (res.parameters[i].singleselection == '1') {
          res.parameters[i].singleselectiontext = '（单选）'
        } else {
          res.parameters[i].singleselectiontext = '（多选）'
        }
      }
      _this.data.upmod.reorderinquiryquestion = res.parameters;
      _this.setData(_this.data)
    })
  },

  checkboxChange: function(e) {
    var values = e.detail.value;
    for (var i = 0; i < this.data.upmod.reorderinquiryquestion.length; i++) {
      if (this.data.upmod.reorderinquiryquestion[i].id == e.target.dataset.vas) {
        var checkitems = this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions;
        for (var j = 0; j < checkitems.length; j++) {
          checkitems[j].ischecked = '2';
          for (var m = 0; m < values.length; m++) {
            if (values[m] == (this.data.upmod.reorderinquiryquestion[i].id + "-" + checkitems[j].id)) {
              checkitems[j].ischecked = '1';
              break;
            }

          }
        }
      }
    }
    this.setData(this.data);
  },
  radioChange: function(e) {
    var values = e.detail.value;
    for (var i = 0; i < this.data.upmod.reorderinquiryquestion.length; i++) {
      if (this.data.upmod.reorderinquiryquestion[i].id == e.target.dataset.vas) {
        for (var j = 0, len = this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions.length; j < len; ++j) {
          this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions[j].ischecked = (values == (this.data.upmod.reorderinquiryquestion[i].id + "-" + this.data.upmod.reorderinquiryquestion[i].orderinquiryoptions[j].id)) ? 1 : 2;
        }
      }
    }

    this.setData(this.data);
  }
})